{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "%matplotlib inline\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from scipy import stats\n",
    "import pandas as pd\n",
    "\n",
    "import seaborn as sns;sns.set()\n",
    "import random"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "js = pd.read_excel('C:/Users/c/Desktop/new/train-l.xlsx')\n",
    "test = d.read_excel('C:/Users/c/Desktop/new/test.xlsx')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>record timestamp</th>\n",
       "      <th>client timestamp</th>\n",
       "      <th>button</th>\n",
       "      <th>state</th>\n",
       "      <th>x</th>\n",
       "      <th>y</th>\n",
       "      <th>label</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>NoButton</td>\n",
       "      <td>Move</td>\n",
       "      <td>126</td>\n",
       "      <td>337</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.016</td>\n",
       "      <td>NoButton</td>\n",
       "      <td>Move</td>\n",
       "      <td>129</td>\n",
       "      <td>337</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.032</td>\n",
       "      <td>NoButton</td>\n",
       "      <td>Move</td>\n",
       "      <td>136</td>\n",
       "      <td>337</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.047</td>\n",
       "      <td>NoButton</td>\n",
       "      <td>Move</td>\n",
       "      <td>155</td>\n",
       "      <td>339</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.063</td>\n",
       "      <td>NoButton</td>\n",
       "      <td>Move</td>\n",
       "      <td>185</td>\n",
       "      <td>340</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   record timestamp  client timestamp    button state    x    y  label\n",
       "0               0.0             0.000  NoButton  Move  126  337      1\n",
       "1               0.0             0.016  NoButton  Move  129  337      1\n",
       "2               0.0             0.032  NoButton  Move  136  337      1\n",
       "3               0.0             0.047  NoButton  Move  155  339      1\n",
       "4               0.0             0.063  NoButton  Move  185  340      1"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "js.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "col = js.columns.values.tolist()\n",
    "col1 = col[2:-1]\n",
    "data_x = np.array(js[col1])\n",
    "data_y = js['label']\n",
    "colt = js.columns.values.tolist()\n",
    "col2 = colt[2:-1]\n",
    "test_x = np.array(test[col2])\n",
    "test_y = test['label']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn import preprocessing\n",
    "from sklearn.preprocessing import LabelEncoder\n",
    "from sklearn.preprocessing import OneHotEncoder"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>record timestamp</th>\n",
       "      <th>client timestamp</th>\n",
       "      <th>button</th>\n",
       "      <th>state</th>\n",
       "      <th>x</th>\n",
       "      <th>y</th>\n",
       "      <th>label</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>1</td>\n",
       "      <td>Move</td>\n",
       "      <td>126</td>\n",
       "      <td>337</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.000</td>\n",
       "      <td>0.016</td>\n",
       "      <td>1</td>\n",
       "      <td>Move</td>\n",
       "      <td>129</td>\n",
       "      <td>337</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.000</td>\n",
       "      <td>0.032</td>\n",
       "      <td>1</td>\n",
       "      <td>Move</td>\n",
       "      <td>136</td>\n",
       "      <td>337</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.000</td>\n",
       "      <td>0.047</td>\n",
       "      <td>1</td>\n",
       "      <td>Move</td>\n",
       "      <td>155</td>\n",
       "      <td>339</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.000</td>\n",
       "      <td>0.063</td>\n",
       "      <td>1</td>\n",
       "      <td>Move</td>\n",
       "      <td>185</td>\n",
       "      <td>340</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0.105</td>\n",
       "      <td>0.078</td>\n",
       "      <td>1</td>\n",
       "      <td>Move</td>\n",
       "      <td>200</td>\n",
       "      <td>338</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>0.106</td>\n",
       "      <td>0.094</td>\n",
       "      <td>1</td>\n",
       "      <td>Move</td>\n",
       "      <td>219</td>\n",
       "      <td>335</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>0.106</td>\n",
       "      <td>0.110</td>\n",
       "      <td>1</td>\n",
       "      <td>Move</td>\n",
       "      <td>240</td>\n",
       "      <td>329</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>0.106</td>\n",
       "      <td>0.141</td>\n",
       "      <td>1</td>\n",
       "      <td>Move</td>\n",
       "      <td>270</td>\n",
       "      <td>320</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>0.106</td>\n",
       "      <td>0.156</td>\n",
       "      <td>1</td>\n",
       "      <td>Move</td>\n",
       "      <td>281</td>\n",
       "      <td>317</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>0.106</td>\n",
       "      <td>0.172</td>\n",
       "      <td>1</td>\n",
       "      <td>Move</td>\n",
       "      <td>289</td>\n",
       "      <td>312</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>0.221</td>\n",
       "      <td>0.188</td>\n",
       "      <td>1</td>\n",
       "      <td>Move</td>\n",
       "      <td>299</td>\n",
       "      <td>303</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>0.221</td>\n",
       "      <td>0.203</td>\n",
       "      <td>1</td>\n",
       "      <td>Move</td>\n",
       "      <td>317</td>\n",
       "      <td>275</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>0.221</td>\n",
       "      <td>0.219</td>\n",
       "      <td>1</td>\n",
       "      <td>Move</td>\n",
       "      <td>330</td>\n",
       "      <td>254</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>0.221</td>\n",
       "      <td>0.234</td>\n",
       "      <td>1</td>\n",
       "      <td>Move</td>\n",
       "      <td>336</td>\n",
       "      <td>237</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>0.221</td>\n",
       "      <td>0.281</td>\n",
       "      <td>1</td>\n",
       "      <td>Move</td>\n",
       "      <td>340</td>\n",
       "      <td>225</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>0.221</td>\n",
       "      <td>0.281</td>\n",
       "      <td>1</td>\n",
       "      <td>Move</td>\n",
       "      <td>341</td>\n",
       "      <td>221</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>0.329</td>\n",
       "      <td>0.297</td>\n",
       "      <td>1</td>\n",
       "      <td>Move</td>\n",
       "      <td>342</td>\n",
       "      <td>218</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>0.329</td>\n",
       "      <td>0.312</td>\n",
       "      <td>1</td>\n",
       "      <td>Move</td>\n",
       "      <td>345</td>\n",
       "      <td>210</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>0.329</td>\n",
       "      <td>0.328</td>\n",
       "      <td>1</td>\n",
       "      <td>Move</td>\n",
       "      <td>353</td>\n",
       "      <td>198</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>0.329</td>\n",
       "      <td>0.344</td>\n",
       "      <td>1</td>\n",
       "      <td>Move</td>\n",
       "      <td>365</td>\n",
       "      <td>185</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>0.329</td>\n",
       "      <td>0.359</td>\n",
       "      <td>1</td>\n",
       "      <td>Move</td>\n",
       "      <td>375</td>\n",
       "      <td>177</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>0.329</td>\n",
       "      <td>0.375</td>\n",
       "      <td>1</td>\n",
       "      <td>Move</td>\n",
       "      <td>387</td>\n",
       "      <td>170</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>0.329</td>\n",
       "      <td>0.390</td>\n",
       "      <td>1</td>\n",
       "      <td>Move</td>\n",
       "      <td>393</td>\n",
       "      <td>167</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>0.431</td>\n",
       "      <td>0.406</td>\n",
       "      <td>1</td>\n",
       "      <td>Move</td>\n",
       "      <td>401</td>\n",
       "      <td>164</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>0.431</td>\n",
       "      <td>0.437</td>\n",
       "      <td>1</td>\n",
       "      <td>Move</td>\n",
       "      <td>410</td>\n",
       "      <td>160</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>0.431</td>\n",
       "      <td>0.437</td>\n",
       "      <td>1</td>\n",
       "      <td>Move</td>\n",
       "      <td>427</td>\n",
       "      <td>155</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>0.431</td>\n",
       "      <td>0.468</td>\n",
       "      <td>1</td>\n",
       "      <td>Move</td>\n",
       "      <td>440</td>\n",
       "      <td>150</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>0.431</td>\n",
       "      <td>0.484</td>\n",
       "      <td>1</td>\n",
       "      <td>Move</td>\n",
       "      <td>453</td>\n",
       "      <td>146</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>0.431</td>\n",
       "      <td>0.500</td>\n",
       "      <td>1</td>\n",
       "      <td>Move</td>\n",
       "      <td>462</td>\n",
       "      <td>144</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>537811</th>\n",
       "      <td>4724.114</td>\n",
       "      <td>4724.116</td>\n",
       "      <td>1</td>\n",
       "      <td>Move</td>\n",
       "      <td>198</td>\n",
       "      <td>211</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>537812</th>\n",
       "      <td>4724.114</td>\n",
       "      <td>4724.116</td>\n",
       "      <td>1</td>\n",
       "      <td>Move</td>\n",
       "      <td>199</td>\n",
       "      <td>211</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>537813</th>\n",
       "      <td>4724.114</td>\n",
       "      <td>4724.132</td>\n",
       "      <td>1</td>\n",
       "      <td>Move</td>\n",
       "      <td>200</td>\n",
       "      <td>211</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>537814</th>\n",
       "      <td>4724.114</td>\n",
       "      <td>4724.132</td>\n",
       "      <td>1</td>\n",
       "      <td>Move</td>\n",
       "      <td>200</td>\n",
       "      <td>210</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>537815</th>\n",
       "      <td>4724.114</td>\n",
       "      <td>4724.147</td>\n",
       "      <td>1</td>\n",
       "      <td>Move</td>\n",
       "      <td>201</td>\n",
       "      <td>210</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>537816</th>\n",
       "      <td>4724.223</td>\n",
       "      <td>4724.147</td>\n",
       "      <td>1</td>\n",
       "      <td>Move</td>\n",
       "      <td>202</td>\n",
       "      <td>210</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>537817</th>\n",
       "      <td>4724.223</td>\n",
       "      <td>4724.163</td>\n",
       "      <td>1</td>\n",
       "      <td>Move</td>\n",
       "      <td>203</td>\n",
       "      <td>210</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>537818</th>\n",
       "      <td>4724.223</td>\n",
       "      <td>4724.163</td>\n",
       "      <td>1</td>\n",
       "      <td>Move</td>\n",
       "      <td>204</td>\n",
       "      <td>210</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>537819</th>\n",
       "      <td>4724.223</td>\n",
       "      <td>4724.178</td>\n",
       "      <td>1</td>\n",
       "      <td>Move</td>\n",
       "      <td>205</td>\n",
       "      <td>210</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>537820</th>\n",
       "      <td>4724.223</td>\n",
       "      <td>4724.178</td>\n",
       "      <td>1</td>\n",
       "      <td>Move</td>\n",
       "      <td>208</td>\n",
       "      <td>210</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>537821</th>\n",
       "      <td>4724.223</td>\n",
       "      <td>4724.194</td>\n",
       "      <td>1</td>\n",
       "      <td>Move</td>\n",
       "      <td>210</td>\n",
       "      <td>210</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>537822</th>\n",
       "      <td>4724.223</td>\n",
       "      <td>4724.194</td>\n",
       "      <td>1</td>\n",
       "      <td>Move</td>\n",
       "      <td>213</td>\n",
       "      <td>210</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>537823</th>\n",
       "      <td>4724.223</td>\n",
       "      <td>4724.210</td>\n",
       "      <td>1</td>\n",
       "      <td>Move</td>\n",
       "      <td>216</td>\n",
       "      <td>210</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>537824</th>\n",
       "      <td>4724.223</td>\n",
       "      <td>4724.210</td>\n",
       "      <td>1</td>\n",
       "      <td>Move</td>\n",
       "      <td>218</td>\n",
       "      <td>210</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>537825</th>\n",
       "      <td>4724.223</td>\n",
       "      <td>4724.225</td>\n",
       "      <td>1</td>\n",
       "      <td>Move</td>\n",
       "      <td>220</td>\n",
       "      <td>210</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>537826</th>\n",
       "      <td>4724.223</td>\n",
       "      <td>4724.225</td>\n",
       "      <td>1</td>\n",
       "      <td>Move</td>\n",
       "      <td>223</td>\n",
       "      <td>210</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>537827</th>\n",
       "      <td>4724.223</td>\n",
       "      <td>4724.241</td>\n",
       "      <td>1</td>\n",
       "      <td>Move</td>\n",
       "      <td>226</td>\n",
       "      <td>210</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>537828</th>\n",
       "      <td>4724.223</td>\n",
       "      <td>4724.241</td>\n",
       "      <td>1</td>\n",
       "      <td>Move</td>\n",
       "      <td>229</td>\n",
       "      <td>210</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>537829</th>\n",
       "      <td>4724.223</td>\n",
       "      <td>4724.256</td>\n",
       "      <td>1</td>\n",
       "      <td>Move</td>\n",
       "      <td>232</td>\n",
       "      <td>210</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>537830</th>\n",
       "      <td>4724.344</td>\n",
       "      <td>4724.256</td>\n",
       "      <td>1</td>\n",
       "      <td>Move</td>\n",
       "      <td>235</td>\n",
       "      <td>210</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>537831</th>\n",
       "      <td>4724.344</td>\n",
       "      <td>4724.272</td>\n",
       "      <td>1</td>\n",
       "      <td>Move</td>\n",
       "      <td>236</td>\n",
       "      <td>210</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>537832</th>\n",
       "      <td>4724.344</td>\n",
       "      <td>4724.272</td>\n",
       "      <td>1</td>\n",
       "      <td>Move</td>\n",
       "      <td>238</td>\n",
       "      <td>210</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>537833</th>\n",
       "      <td>4724.344</td>\n",
       "      <td>4724.288</td>\n",
       "      <td>1</td>\n",
       "      <td>Move</td>\n",
       "      <td>239</td>\n",
       "      <td>209</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>537834</th>\n",
       "      <td>4724.344</td>\n",
       "      <td>4724.288</td>\n",
       "      <td>1</td>\n",
       "      <td>Move</td>\n",
       "      <td>240</td>\n",
       "      <td>209</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>537835</th>\n",
       "      <td>4724.344</td>\n",
       "      <td>4724.319</td>\n",
       "      <td>1</td>\n",
       "      <td>Move</td>\n",
       "      <td>241</td>\n",
       "      <td>209</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>537836</th>\n",
       "      <td>4724.344</td>\n",
       "      <td>4724.350</td>\n",
       "      <td>1</td>\n",
       "      <td>Move</td>\n",
       "      <td>242</td>\n",
       "      <td>209</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>537837</th>\n",
       "      <td>4724.344</td>\n",
       "      <td>4724.350</td>\n",
       "      <td>1</td>\n",
       "      <td>Move</td>\n",
       "      <td>243</td>\n",
       "      <td>208</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>537838</th>\n",
       "      <td>4724.344</td>\n",
       "      <td>4724.366</td>\n",
       "      <td>1</td>\n",
       "      <td>Move</td>\n",
       "      <td>244</td>\n",
       "      <td>208</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>537839</th>\n",
       "      <td>4724.396</td>\n",
       "      <td>4724.428</td>\n",
       "      <td>2</td>\n",
       "      <td>Pressed</td>\n",
       "      <td>244</td>\n",
       "      <td>208</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>537840</th>\n",
       "      <td>4724.472</td>\n",
       "      <td>4724.506</td>\n",
       "      <td>2</td>\n",
       "      <td>Released</td>\n",
       "      <td>244</td>\n",
       "      <td>208</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>537841 rows × 7 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        record timestamp  client timestamp  button     state    x    y  label\n",
       "0                  0.000             0.000       1      Move  126  337      1\n",
       "1                  0.000             0.016       1      Move  129  337      1\n",
       "2                  0.000             0.032       1      Move  136  337      1\n",
       "3                  0.000             0.047       1      Move  155  339      1\n",
       "4                  0.000             0.063       1      Move  185  340      1\n",
       "5                  0.105             0.078       1      Move  200  338      1\n",
       "6                  0.106             0.094       1      Move  219  335      1\n",
       "7                  0.106             0.110       1      Move  240  329      1\n",
       "8                  0.106             0.141       1      Move  270  320      1\n",
       "9                  0.106             0.156       1      Move  281  317      1\n",
       "10                 0.106             0.172       1      Move  289  312      1\n",
       "11                 0.221             0.188       1      Move  299  303      1\n",
       "12                 0.221             0.203       1      Move  317  275      1\n",
       "13                 0.221             0.219       1      Move  330  254      1\n",
       "14                 0.221             0.234       1      Move  336  237      1\n",
       "15                 0.221             0.281       1      Move  340  225      1\n",
       "16                 0.221             0.281       1      Move  341  221      1\n",
       "17                 0.329             0.297       1      Move  342  218      1\n",
       "18                 0.329             0.312       1      Move  345  210      1\n",
       "19                 0.329             0.328       1      Move  353  198      1\n",
       "20                 0.329             0.344       1      Move  365  185      1\n",
       "21                 0.329             0.359       1      Move  375  177      1\n",
       "22                 0.329             0.375       1      Move  387  170      1\n",
       "23                 0.329             0.390       1      Move  393  167      1\n",
       "24                 0.431             0.406       1      Move  401  164      1\n",
       "25                 0.431             0.437       1      Move  410  160      1\n",
       "26                 0.431             0.437       1      Move  427  155      1\n",
       "27                 0.431             0.468       1      Move  440  150      1\n",
       "28                 0.431             0.484       1      Move  453  146      1\n",
       "29                 0.431             0.500       1      Move  462  144      1\n",
       "...                  ...               ...     ...       ...  ...  ...    ...\n",
       "537811          4724.114          4724.116       1      Move  198  211      0\n",
       "537812          4724.114          4724.116       1      Move  199  211      0\n",
       "537813          4724.114          4724.132       1      Move  200  211      0\n",
       "537814          4724.114          4724.132       1      Move  200  210      0\n",
       "537815          4724.114          4724.147       1      Move  201  210      0\n",
       "537816          4724.223          4724.147       1      Move  202  210      0\n",
       "537817          4724.223          4724.163       1      Move  203  210      0\n",
       "537818          4724.223          4724.163       1      Move  204  210      0\n",
       "537819          4724.223          4724.178       1      Move  205  210      0\n",
       "537820          4724.223          4724.178       1      Move  208  210      0\n",
       "537821          4724.223          4724.194       1      Move  210  210      0\n",
       "537822          4724.223          4724.194       1      Move  213  210      0\n",
       "537823          4724.223          4724.210       1      Move  216  210      0\n",
       "537824          4724.223          4724.210       1      Move  218  210      0\n",
       "537825          4724.223          4724.225       1      Move  220  210      0\n",
       "537826          4724.223          4724.225       1      Move  223  210      0\n",
       "537827          4724.223          4724.241       1      Move  226  210      0\n",
       "537828          4724.223          4724.241       1      Move  229  210      0\n",
       "537829          4724.223          4724.256       1      Move  232  210      0\n",
       "537830          4724.344          4724.256       1      Move  235  210      0\n",
       "537831          4724.344          4724.272       1      Move  236  210      0\n",
       "537832          4724.344          4724.272       1      Move  238  210      0\n",
       "537833          4724.344          4724.288       1      Move  239  209      0\n",
       "537834          4724.344          4724.288       1      Move  240  209      0\n",
       "537835          4724.344          4724.319       1      Move  241  209      0\n",
       "537836          4724.344          4724.350       1      Move  242  209      0\n",
       "537837          4724.344          4724.350       1      Move  243  208      0\n",
       "537838          4724.344          4724.366       1      Move  244  208      0\n",
       "537839          4724.396          4724.428       2   Pressed  244  208      0\n",
       "537840          4724.472          4724.506       2  Released  244  208      0\n",
       "\n",
       "[537841 rows x 7 columns]"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "button_mapping = {\n",
    "    'NoButton':1,\n",
    "    'Left':2,\n",
    "    'Scroll':3,\n",
    "    'Right':4}\n",
    "js['button'] = js['button'].map(button_mapping)\n",
    "\n",
    "test['button'] = test['button'].map(button_mapping)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>record timestamp</th>\n",
       "      <th>client timestamp</th>\n",
       "      <th>button</th>\n",
       "      <th>state</th>\n",
       "      <th>x</th>\n",
       "      <th>y</th>\n",
       "      <th>label</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>126</td>\n",
       "      <td>337</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.000</td>\n",
       "      <td>0.016</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>129</td>\n",
       "      <td>337</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.000</td>\n",
       "      <td>0.032</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>136</td>\n",
       "      <td>337</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.000</td>\n",
       "      <td>0.047</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>155</td>\n",
       "      <td>339</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.000</td>\n",
       "      <td>0.063</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>185</td>\n",
       "      <td>340</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0.105</td>\n",
       "      <td>0.078</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>200</td>\n",
       "      <td>338</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>0.106</td>\n",
       "      <td>0.094</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>219</td>\n",
       "      <td>335</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>0.106</td>\n",
       "      <td>0.110</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>240</td>\n",
       "      <td>329</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>0.106</td>\n",
       "      <td>0.141</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>270</td>\n",
       "      <td>320</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>0.106</td>\n",
       "      <td>0.156</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>281</td>\n",
       "      <td>317</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>0.106</td>\n",
       "      <td>0.172</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>289</td>\n",
       "      <td>312</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>0.221</td>\n",
       "      <td>0.188</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>299</td>\n",
       "      <td>303</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>0.221</td>\n",
       "      <td>0.203</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>317</td>\n",
       "      <td>275</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>0.221</td>\n",
       "      <td>0.219</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>330</td>\n",
       "      <td>254</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>0.221</td>\n",
       "      <td>0.234</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>336</td>\n",
       "      <td>237</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>0.221</td>\n",
       "      <td>0.281</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>340</td>\n",
       "      <td>225</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>0.221</td>\n",
       "      <td>0.281</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>341</td>\n",
       "      <td>221</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>0.329</td>\n",
       "      <td>0.297</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>342</td>\n",
       "      <td>218</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>0.329</td>\n",
       "      <td>0.312</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>345</td>\n",
       "      <td>210</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>0.329</td>\n",
       "      <td>0.328</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>353</td>\n",
       "      <td>198</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>0.329</td>\n",
       "      <td>0.344</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>365</td>\n",
       "      <td>185</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>0.329</td>\n",
       "      <td>0.359</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>375</td>\n",
       "      <td>177</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>0.329</td>\n",
       "      <td>0.375</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>387</td>\n",
       "      <td>170</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>0.329</td>\n",
       "      <td>0.390</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>393</td>\n",
       "      <td>167</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>0.431</td>\n",
       "      <td>0.406</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>401</td>\n",
       "      <td>164</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>0.431</td>\n",
       "      <td>0.437</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>410</td>\n",
       "      <td>160</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>0.431</td>\n",
       "      <td>0.437</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>427</td>\n",
       "      <td>155</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>0.431</td>\n",
       "      <td>0.468</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>440</td>\n",
       "      <td>150</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>0.431</td>\n",
       "      <td>0.484</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>453</td>\n",
       "      <td>146</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>0.431</td>\n",
       "      <td>0.500</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>462</td>\n",
       "      <td>144</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>537811</th>\n",
       "      <td>4724.114</td>\n",
       "      <td>4724.116</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>198</td>\n",
       "      <td>211</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>537812</th>\n",
       "      <td>4724.114</td>\n",
       "      <td>4724.116</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>199</td>\n",
       "      <td>211</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>537813</th>\n",
       "      <td>4724.114</td>\n",
       "      <td>4724.132</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>200</td>\n",
       "      <td>211</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>537814</th>\n",
       "      <td>4724.114</td>\n",
       "      <td>4724.132</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>200</td>\n",
       "      <td>210</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>537815</th>\n",
       "      <td>4724.114</td>\n",
       "      <td>4724.147</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>201</td>\n",
       "      <td>210</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>537816</th>\n",
       "      <td>4724.223</td>\n",
       "      <td>4724.147</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>202</td>\n",
       "      <td>210</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>537817</th>\n",
       "      <td>4724.223</td>\n",
       "      <td>4724.163</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>203</td>\n",
       "      <td>210</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>537818</th>\n",
       "      <td>4724.223</td>\n",
       "      <td>4724.163</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>204</td>\n",
       "      <td>210</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>537819</th>\n",
       "      <td>4724.223</td>\n",
       "      <td>4724.178</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>205</td>\n",
       "      <td>210</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>537820</th>\n",
       "      <td>4724.223</td>\n",
       "      <td>4724.178</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>208</td>\n",
       "      <td>210</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>537821</th>\n",
       "      <td>4724.223</td>\n",
       "      <td>4724.194</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>210</td>\n",
       "      <td>210</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>537822</th>\n",
       "      <td>4724.223</td>\n",
       "      <td>4724.194</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>213</td>\n",
       "      <td>210</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>537823</th>\n",
       "      <td>4724.223</td>\n",
       "      <td>4724.210</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>216</td>\n",
       "      <td>210</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>537824</th>\n",
       "      <td>4724.223</td>\n",
       "      <td>4724.210</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>218</td>\n",
       "      <td>210</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>537825</th>\n",
       "      <td>4724.223</td>\n",
       "      <td>4724.225</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>220</td>\n",
       "      <td>210</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>537826</th>\n",
       "      <td>4724.223</td>\n",
       "      <td>4724.225</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>223</td>\n",
       "      <td>210</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>537827</th>\n",
       "      <td>4724.223</td>\n",
       "      <td>4724.241</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>226</td>\n",
       "      <td>210</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>537828</th>\n",
       "      <td>4724.223</td>\n",
       "      <td>4724.241</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>229</td>\n",
       "      <td>210</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>537829</th>\n",
       "      <td>4724.223</td>\n",
       "      <td>4724.256</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>232</td>\n",
       "      <td>210</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>537830</th>\n",
       "      <td>4724.344</td>\n",
       "      <td>4724.256</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>235</td>\n",
       "      <td>210</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>537831</th>\n",
       "      <td>4724.344</td>\n",
       "      <td>4724.272</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>236</td>\n",
       "      <td>210</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>537832</th>\n",
       "      <td>4724.344</td>\n",
       "      <td>4724.272</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>238</td>\n",
       "      <td>210</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>537833</th>\n",
       "      <td>4724.344</td>\n",
       "      <td>4724.288</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>239</td>\n",
       "      <td>209</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>537834</th>\n",
       "      <td>4724.344</td>\n",
       "      <td>4724.288</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>240</td>\n",
       "      <td>209</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>537835</th>\n",
       "      <td>4724.344</td>\n",
       "      <td>4724.319</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>241</td>\n",
       "      <td>209</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>537836</th>\n",
       "      <td>4724.344</td>\n",
       "      <td>4724.350</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>242</td>\n",
       "      <td>209</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>537837</th>\n",
       "      <td>4724.344</td>\n",
       "      <td>4724.350</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>243</td>\n",
       "      <td>208</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>537838</th>\n",
       "      <td>4724.344</td>\n",
       "      <td>4724.366</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>244</td>\n",
       "      <td>208</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>537839</th>\n",
       "      <td>4724.396</td>\n",
       "      <td>4724.428</td>\n",
       "      <td>2</td>\n",
       "      <td>6</td>\n",
       "      <td>244</td>\n",
       "      <td>208</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>537840</th>\n",
       "      <td>4724.472</td>\n",
       "      <td>4724.506</td>\n",
       "      <td>2</td>\n",
       "      <td>7</td>\n",
       "      <td>244</td>\n",
       "      <td>208</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>537841 rows × 7 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        record timestamp  client timestamp  button  state    x    y  label\n",
       "0                  0.000             0.000       1      5  126  337      1\n",
       "1                  0.000             0.016       1      5  129  337      1\n",
       "2                  0.000             0.032       1      5  136  337      1\n",
       "3                  0.000             0.047       1      5  155  339      1\n",
       "4                  0.000             0.063       1      5  185  340      1\n",
       "5                  0.105             0.078       1      5  200  338      1\n",
       "6                  0.106             0.094       1      5  219  335      1\n",
       "7                  0.106             0.110       1      5  240  329      1\n",
       "8                  0.106             0.141       1      5  270  320      1\n",
       "9                  0.106             0.156       1      5  281  317      1\n",
       "10                 0.106             0.172       1      5  289  312      1\n",
       "11                 0.221             0.188       1      5  299  303      1\n",
       "12                 0.221             0.203       1      5  317  275      1\n",
       "13                 0.221             0.219       1      5  330  254      1\n",
       "14                 0.221             0.234       1      5  336  237      1\n",
       "15                 0.221             0.281       1      5  340  225      1\n",
       "16                 0.221             0.281       1      5  341  221      1\n",
       "17                 0.329             0.297       1      5  342  218      1\n",
       "18                 0.329             0.312       1      5  345  210      1\n",
       "19                 0.329             0.328       1      5  353  198      1\n",
       "20                 0.329             0.344       1      5  365  185      1\n",
       "21                 0.329             0.359       1      5  375  177      1\n",
       "22                 0.329             0.375       1      5  387  170      1\n",
       "23                 0.329             0.390       1      5  393  167      1\n",
       "24                 0.431             0.406       1      5  401  164      1\n",
       "25                 0.431             0.437       1      5  410  160      1\n",
       "26                 0.431             0.437       1      5  427  155      1\n",
       "27                 0.431             0.468       1      5  440  150      1\n",
       "28                 0.431             0.484       1      5  453  146      1\n",
       "29                 0.431             0.500       1      5  462  144      1\n",
       "...                  ...               ...     ...    ...  ...  ...    ...\n",
       "537811          4724.114          4724.116       1      5  198  211      0\n",
       "537812          4724.114          4724.116       1      5  199  211      0\n",
       "537813          4724.114          4724.132       1      5  200  211      0\n",
       "537814          4724.114          4724.132       1      5  200  210      0\n",
       "537815          4724.114          4724.147       1      5  201  210      0\n",
       "537816          4724.223          4724.147       1      5  202  210      0\n",
       "537817          4724.223          4724.163       1      5  203  210      0\n",
       "537818          4724.223          4724.163       1      5  204  210      0\n",
       "537819          4724.223          4724.178       1      5  205  210      0\n",
       "537820          4724.223          4724.178       1      5  208  210      0\n",
       "537821          4724.223          4724.194       1      5  210  210      0\n",
       "537822          4724.223          4724.194       1      5  213  210      0\n",
       "537823          4724.223          4724.210       1      5  216  210      0\n",
       "537824          4724.223          4724.210       1      5  218  210      0\n",
       "537825          4724.223          4724.225       1      5  220  210      0\n",
       "537826          4724.223          4724.225       1      5  223  210      0\n",
       "537827          4724.223          4724.241       1      5  226  210      0\n",
       "537828          4724.223          4724.241       1      5  229  210      0\n",
       "537829          4724.223          4724.256       1      5  232  210      0\n",
       "537830          4724.344          4724.256       1      5  235  210      0\n",
       "537831          4724.344          4724.272       1      5  236  210      0\n",
       "537832          4724.344          4724.272       1      5  238  210      0\n",
       "537833          4724.344          4724.288       1      5  239  209      0\n",
       "537834          4724.344          4724.288       1      5  240  209      0\n",
       "537835          4724.344          4724.319       1      5  241  209      0\n",
       "537836          4724.344          4724.350       1      5  242  209      0\n",
       "537837          4724.344          4724.350       1      5  243  208      0\n",
       "537838          4724.344          4724.366       1      5  244  208      0\n",
       "537839          4724.396          4724.428       2      6  244  208      0\n",
       "537840          4724.472          4724.506       2      7  244  208      0\n",
       "\n",
       "[537841 rows x 7 columns]"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "state_mapping = {\n",
    "    'Move':5,\n",
    "    'Pressed':6,\n",
    "    'Released':7,\n",
    "    'Down':8,\n",
    "    'Drag':9,\n",
    "    'Up':10\n",
    "}\n",
    "js['state'] = js['state'].map(state_mapping)\n",
    "test['state'] = test['state'].map(state_mapping)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [],
   "source": [
    "data_x = js[['record timestamp','client timestamp','button','state','x','y']].values\n",
    "le = LabelEncoder()\n",
    "data_x[:,0] = le.fit_transform(data_x[:,0])\n",
    "data_x\n",
    "data_y = js['label']\n",
    "\n",
    "test_x = test[['record timestamp','client timestamp','button','state','x','y']].values\n",
    "le = LabelEncoder()\n",
    "test_x[:,0] = le.fit_transform(test_x[:,0])\n",
    "test_x\n",
    "test_y = test['label']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.preprocessing import MinMaxScaler\n",
    "mms = MinMaxScaler()\n",
    "data_x = mms.fit_transform(data_x)\n",
    "test_x = mms.fit_transform(test_x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[-1.7315271 , -1.42591344, -0.25820763, -0.31778672, -0.52913502,\n",
       "        -0.02310523],\n",
       "       [-1.7315271 , -1.42590469, -0.25820763, -0.31778672, -0.52131308,\n",
       "        -0.02310523],\n",
       "       [-1.7315271 , -1.42589594, -0.25820763, -0.31778672, -0.50306188,\n",
       "        -0.02310523],\n",
       "       ...,\n",
       "       [ 1.35533888,  1.15740332, -0.25820763, -0.31778672, -0.22147188,\n",
       "        -0.3796689 ],\n",
       "       [ 1.35539031,  1.15743722,  2.13091035,  0.63904967, -0.22147188,\n",
       "        -0.3796689 ],\n",
       "       [ 1.35541602,  1.15747987,  2.13091035,  1.59588606, -0.22147188,\n",
       "        -0.3796689 ]])"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "scaler = preprocessing.StandardScaler().fit(data_x)\n",
    "scaler.transform(data_x)\n",
    "scaler2 = preprocessing.StandardScaler().fit(test_x)\n",
    "scaler2.transform(test_x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "ename": "MemoryError",
     "evalue": "",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mMemoryError\u001b[0m                               Traceback (most recent call last)",
      "\u001b[1;32m<ipython-input-26-314a7f909807>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m()\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[1;32mfrom\u001b[0m \u001b[0msklearn\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mdecomposition\u001b[0m \u001b[1;32mimport\u001b[0m \u001b[0mKernelPCA\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      2\u001b[0m \u001b[0mkpca\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mKernelPCA\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mkernel\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;34m\"rbf\"\u001b[0m\u001b[1;33m,\u001b[0m\u001b[0mn_components\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;36m10\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m----> 3\u001b[1;33m \u001b[0mdata_kpca_x\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mkpca\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mfit_transform\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mdata_x\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[1;32mC:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\Anaconda3_64\\lib\\site-packages\\sklearn\\decomposition\\kernel_pca.py\u001b[0m in \u001b[0;36mfit_transform\u001b[1;34m(self, X, y, **params)\u001b[0m\n\u001b[0;32m    260\u001b[0m         \u001b[0mX_new\u001b[0m \u001b[1;33m:\u001b[0m \u001b[0marray\u001b[0m\u001b[1;33m-\u001b[0m\u001b[0mlike\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mshape\u001b[0m \u001b[1;33m(\u001b[0m\u001b[0mn_samples\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mn_components\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    261\u001b[0m         \"\"\"\n\u001b[1;32m--> 262\u001b[1;33m         \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mX\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;33m**\u001b[0m\u001b[0mparams\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    263\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    264\u001b[0m         \u001b[0mX_transformed\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0malphas_\u001b[0m \u001b[1;33m*\u001b[0m \u001b[0mnp\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0msqrt\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mlambdas_\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32mC:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\Anaconda3_64\\lib\\site-packages\\sklearn\\decomposition\\kernel_pca.py\u001b[0m in \u001b[0;36mfit\u001b[1;34m(self, X, y)\u001b[0m\n\u001b[0;32m    236\u001b[0m         \"\"\"\n\u001b[0;32m    237\u001b[0m         \u001b[0mX\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mcheck_array\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mX\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0maccept_sparse\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;34m'csr'\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mcopy_X\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 238\u001b[1;33m         \u001b[0mK\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_get_kernel\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mX\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    239\u001b[0m         \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_fit_transform\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mK\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    240\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32mC:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\Anaconda3_64\\lib\\site-packages\\sklearn\\decomposition\\kernel_pca.py\u001b[0m in \u001b[0;36m_get_kernel\u001b[1;34m(self, X, Y)\u001b[0m\n\u001b[0;32m    164\u001b[0m         return pairwise_kernels(X, Y, metric=self.kernel,\n\u001b[0;32m    165\u001b[0m                                 \u001b[0mfilter_params\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;32mTrue\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mn_jobs\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mn_jobs\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 166\u001b[1;33m                                 **params)\n\u001b[0m\u001b[0;32m    167\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    168\u001b[0m     \u001b[1;32mdef\u001b[0m \u001b[0m_fit_transform\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mK\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32mC:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\Anaconda3_64\\lib\\site-packages\\sklearn\\metrics\\pairwise.py\u001b[0m in \u001b[0;36mpairwise_kernels\u001b[1;34m(X, Y, metric, filter_params, n_jobs, **kwds)\u001b[0m\n\u001b[0;32m   1403\u001b[0m         \u001b[1;32mraise\u001b[0m \u001b[0mValueError\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;34m\"Unknown kernel %r\"\u001b[0m \u001b[1;33m%\u001b[0m \u001b[0mmetric\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1404\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 1405\u001b[1;33m     \u001b[1;32mreturn\u001b[0m \u001b[0m_parallel_pairwise\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mX\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mY\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mfunc\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mn_jobs\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;33m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[1;32mC:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\Anaconda3_64\\lib\\site-packages\\sklearn\\metrics\\pairwise.py\u001b[0m in \u001b[0;36m_parallel_pairwise\u001b[1;34m(X, Y, func, n_jobs, **kwds)\u001b[0m\n\u001b[0;32m   1088\u001b[0m     \u001b[1;32mif\u001b[0m \u001b[0mn_jobs\u001b[0m \u001b[1;33m==\u001b[0m \u001b[1;36m1\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1089\u001b[0m         \u001b[1;31m# Special case to avoid picklability checks in delayed\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 1090\u001b[1;33m         \u001b[1;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mX\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mY\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;33m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   1091\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1092\u001b[0m     \u001b[1;31m# TODO: in some cases, backend='threading' may be appropriate\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32mC:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\Anaconda3_64\\lib\\site-packages\\sklearn\\metrics\\pairwise.py\u001b[0m in \u001b[0;36mrbf_kernel\u001b[1;34m(X, Y, gamma)\u001b[0m\n\u001b[0;32m    840\u001b[0m         \u001b[0mgamma\u001b[0m \u001b[1;33m=\u001b[0m \u001b[1;36m1.0\u001b[0m \u001b[1;33m/\u001b[0m \u001b[0mX\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;36m1\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    841\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 842\u001b[1;33m     \u001b[0mK\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0meuclidean_distances\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mX\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mY\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0msquared\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;32mTrue\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    843\u001b[0m     \u001b[0mK\u001b[0m \u001b[1;33m*=\u001b[0m \u001b[1;33m-\u001b[0m\u001b[0mgamma\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    844\u001b[0m     \u001b[0mnp\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mexp\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mK\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mK\u001b[0m\u001b[1;33m)\u001b[0m    \u001b[1;31m# exponentiate K in-place\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32mC:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\Anaconda3_64\\lib\\site-packages\\sklearn\\metrics\\pairwise.py\u001b[0m in \u001b[0;36meuclidean_distances\u001b[1;34m(X, Y, Y_norm_squared, squared, X_norm_squared)\u001b[0m\n\u001b[0;32m    244\u001b[0m         \u001b[0mYY\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mrow_norms\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mY\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0msquared\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;32mTrue\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mnp\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mnewaxis\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;33m:\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    245\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 246\u001b[1;33m     \u001b[0mdistances\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0msafe_sparse_dot\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mX\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mY\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mT\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mdense_output\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;32mTrue\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    247\u001b[0m     \u001b[0mdistances\u001b[0m \u001b[1;33m*=\u001b[0m \u001b[1;33m-\u001b[0m\u001b[1;36m2\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    248\u001b[0m     \u001b[0mdistances\u001b[0m \u001b[1;33m+=\u001b[0m \u001b[0mXX\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32mC:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\Anaconda3_64\\lib\\site-packages\\sklearn\\utils\\extmath.py\u001b[0m in \u001b[0;36msafe_sparse_dot\u001b[1;34m(a, b, dense_output)\u001b[0m\n\u001b[0;32m    138\u001b[0m         \u001b[1;32mreturn\u001b[0m \u001b[0mret\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    139\u001b[0m     \u001b[1;32melse\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 140\u001b[1;33m         \u001b[1;32mreturn\u001b[0m \u001b[0mnp\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mdot\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0ma\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mb\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    141\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    142\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;31mMemoryError\u001b[0m: "
     ]
    }
   ],
   "source": [
    "from sklearn.decomposition import KernelPCA\n",
    "kpca = KernelPCA(kernel=\"rbf\",n_components=4)\n",
    "data_x=kpca.fit_transform(data_x)\n",
    "test_x=kpca.fit_transform(test_x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "ename": "ModuleNotFoundError",
     "evalue": "No module named 'gaft'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)",
      "\u001b[1;32m<ipython-input-1-ffd3b068ad72>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m()\u001b[0m\n\u001b[1;32m----> 1\u001b[1;33m \u001b[1;32mfrom\u001b[0m \u001b[0mgaft\u001b[0m \u001b[1;32mimport\u001b[0m \u001b[0mGAEngine\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m      2\u001b[0m \u001b[1;32mfrom\u001b[0m \u001b[0mgaft\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mcomponents\u001b[0m \u001b[1;32mimport\u001b[0m \u001b[0mBinaryIndividual\u001b[0m\u001b[1;33m,\u001b[0m\u001b[0mPopulation\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      3\u001b[0m \u001b[1;32mfrom\u001b[0m \u001b[0mgaft\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0moperators\u001b[0m \u001b[1;32mimport\u001b[0m \u001b[0mRouletteWheelSelection\u001b[0m\u001b[1;33m,\u001b[0m\u001b[0mUniformCrossover\u001b[0m\u001b[1;33m,\u001b[0m\u001b[0mFlipBitMutation\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      4\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      5\u001b[0m \u001b[1;32mfrom\u001b[0m \u001b[0mgaft\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mplugin_interfaces\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0manalysis\u001b[0m \u001b[1;32mimport\u001b[0m \u001b[0mOnTheFlyAnalysis\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;31mModuleNotFoundError\u001b[0m: No module named 'gaft'"
     ]
    }
   ],
   "source": [
    "from gaft import GAEngine\n",
    "from gaft.components import BinaryIndividual\n",
    "from gaft.components import Population\n",
    "from gaft.operators import RouletteWheelSelection\n",
    "from gaft.operators import UniformCrossover\n",
    "from gaft.operators import FlipBitMutation\n",
    "from gaft.analysis.fitness_store import FitnessStore\n",
    "from gaft.plugin_interfaces.analysis import OnTheFlyAnalysis\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "indv_template = BinaryIndividual(ranges=[(-8, 8),(-8,8),(-8,8)], eps=[0.001,0.001,0.001])\n",
    "population = Population(indv_template=indv_template, size=1000)\n",
    "population.init()  # Initialize population with individuals."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "selection = RouletteWheelSelection()\n",
    "crossover = UniformCrossover(pc=0.8, pe=0.5)\n",
    "mutation = FlipBitMutation(pm=0.1,pbm=0.55,alpha=0.6)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "engine = GAEngine(population=population, selection=selection,\n",
    "                  crossover=crossover, mutation=mutation,\n",
    "                  analysis=[ConsoleOutput,FitnessStore])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "@engine.fitness_register\n",
    "import math\n",
    "from sklearn import svm \n",
    "def msefunc(predictval,realval):   \n",
    "    squaredError = []   \n",
    "    absError = []   \n",
    "    for i in range(len(predictval)):     \n",
    "        val=predictval[i-1]-realval[i-1]    \n",
    "        squaredError.append(val * val)  # target-prediction之差平方   \n",
    "        print(\"Square Error: \", squaredError)   \n",
    "        print(\"MSE = \", sum(squaredError) / len(squaredError))  # 均方误差MSE   \n",
    "        return sum(squaredError) / len(squaredError)\n",
    "\n",
    "def fitness(indv):\n",
    "    c,e,g = indv.variants[1],indv.variants[2],indv.variants[-1]\n",
    "    clf = svm.svR(C=c,epsilon=e,gamma=g,kernel='rbf')\n",
    "    clf.fit(data_x,data_y)\n",
    "    predictval = clf.predict(data_x)\n",
    "    reaval = data_y\n",
    "    print(predictval)\n",
    "    return msefunc(predictval,reaval)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "@engine.analysis_register\n",
    "class ConsoleOutput(OnTheFlyAnalysis):\n",
    "    master_only = True\n",
    "    interval = 1\n",
    "    def register_step(self, g, population, engine):\n",
    "        best_indv = population.best_indv(engine.fitness)\n",
    "        msg = 'Generation: {}, best fitness: {:.3f}'.format(g, engine.fmax)\n",
    "        engine.logger.info(msg)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "if '__main__' == __name__:\n",
    "    engine.run(ng=100)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn import neighbors\n",
    "clf2=neighbors.KNeighborsClassifier(n_neighbors,weights=weights,n_classes=2)\n",
    "cif2.fit(data_x,data_y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "from itertools import product\n",
    "from sklearn.ensemble import VotingClassifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "eclf = VotingClassifier(estimators=[('svc',clf1),('knn',clf2), voting='soft', weights=[2,1])\n",
    "x_min, x_max = X[:,0].min() -1, X[:,0].max() + 1\n",
    "y_min, y_max = X[:,1].min() -1, X[:,1].max() + 1\n",
    "xx, yy = np.meshgrid(np.arange(x_min, x_max, 0.01), np.arange(y_min, y_max, 0.01)) \n",
    "fig, axes = plt.subplots(2, 2, sharex='col', sharey='row', figsize=(10, 8))\n",
    "for idx, clf, title in zip(product([0, 1],[0, 1]),\n",
    "                           [clf1, clf2, eclf],\n",
    "                           [ 'KNN ','Kernel SVM', 'Soft Voting']):\n",
    "    Z = clf.predict(np.c_[xx.ravel(), yy.ravel()])\n",
    "    Z = Z.reshape(xx.shape)\n",
    "    axes[idx[0], idx[1]].contourf(xx, yy, Z, alpha=0.4)\n",
    "    axes[idx[0], idx[1]].scatter(X[:, 0],X[:, 1], c=y, s=20, edgecolor='k')\n",
    "    axes[idx[0], idx[1]].set_title(title)\n",
    "plt.show()                                "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
